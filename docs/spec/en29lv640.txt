Author: Xiaojun Li
E-Mail: xiaojun.li@soliton.com.cn

EN29LV640T/B
厂商：Eon Silicon Solution Inc.	www.essi.com.tw
64兆比特（8Mx8或者4Mx16）闪存，带启动块闪存，仅支持3伏CMOS电压。

特点：
单电源供电，读写操作电压范围2.7V到3.6伏
高性能：访问时间最快达70ns
低功耗：在5MHz典型工作频率下，活动读电流为9mA，编程/擦写电流为20mA。空闲或睡眠
模式下电流小于1uA。
灵活的扇区架构：8个8KB扇区，127个32K字扇区或者64K字节扇区；8KB扇区用于顶部或底
部启动；支持扇区扇区组保护，硬件锁保护扇区防止在独立扇区间擦除和编程；此外，临
时扇区组解锁功能允许对前面锁住的扇区进行代码更新。
高性能的编程/擦写速度：字编程时间：典型8us；扇区擦除时间：典型500ms；整片擦除
时间：典型64s。
JEDE标准兼容
标准的DATA#轮询和触发位特性
支持旁路解锁功能的编程命令
擦除的休眠/恢复模式，在擦除推迟模式时读和编程其它扇区
支持JEDEC通用闪存接口标准CFI
低压写小于2.5V
最小100K编程和擦除持续周期
有硬件复位引脚RESET#，可通过硬件方式复位设备到读模式
WP#/ACC输入引脚，写保护功能（WP#）允许保护最远两个启动扇区，不需要关心扇区的保
护状态；加速功能（ACC）提供编程时间加速
封装选择：48引脚TSOP封装，48球形（6mmx8mm）TFBGA封装，64球形（11mmx13mm）TFBGA
封装
工业温度范围

概览描述
EN29LV640T/B是一款64M比特，电擦除，读写非易失性闪存存储器，可被组织为8388608字
节或者4194304字。任意字可在典型的8us内编程。EN29LV640T/B支持3V电压读写操作，访
问速度快到70ns，避免了在高性能微处理系统中的等待（WAIT）状态。
EN29LV640B/T拥有独立的输出使能（OE#），芯片使能（CE#），写使能（WE#）控制，避
免了使用总线链接。本设备设计为既允许单扇区擦除又允许整片擦除，在整片擦除时可以
设置每扇区的保护状态或者临时去保护状态来实现保护特定扇区。设备可以在每扇区上至
少100K编程周期。

引脚：
48TSOP封装：
	22条地址线（A0~A21）
	15条数据线（DQ0~DQ14）
	地址/数据复用DQ15/A-1
	芯片使能CE#
	输出使能OE#
	写使能WE#
	硬件复位RESET#
	字节/字模式选择RY/BY#
	写保护/加速复用WP#/ACC
	电源VCC(2.7V到3.6V)
	地VSS

芯片代号解些：
EN29LV640 T-70 TIP
基本器件编号EN20LV640
EN代表生产场上EON Silicon Solution Inc
29LV代表闪存，3V读写和擦除
640代表64M比特（8Mx8或4Mx16）
记下来是启动代码扇区架构：
T代表顶端启动扇区
B代表底端启动扇区
70表示访问最快速度是70ns
接下来表示封装信息
T代表48引脚TSOP封装
B代表48球状引脚TFBGA封装
E代表64球状引脚TFBGA封装
I代表工业级（温度-40度摄氏到+85摄氏度）
P代表封装内容，为空表示常规型，P表示无铅产品

地址表：
Table-2A，EN29LV640T闪存地址表，扇区0到126为64KB扇区，扇区127到134为8KB扇区
Table-2B，EN29LV640B闪存地址表，扇区0到7为8KB扇区，扇区8到扇区134为64KB扇区
注：当BYTE#为低电平时，地址总线A21:A-1处于字节模式，当BYTE#为高电平时，地址总线
A21:A0处于字模式。

64M闪存用户模式表
各种操作模式下各控制引脚的电平和输出的状态。
注：如果WP#/ACC为低电平（VIL），最外面的两个启动扇区仍然是被保护的。如果
WP#/ACC（VIH）为高电平，则最外面的两个启动扇区是否保护取决于它们上次是处于被保
护还是未被保护的状态。如果WP#/ACC为更高电平（VHH），则所有扇区都未被保护。

64M闪存生产商ID和设备ID获取表
EON		7F 1C
EN29LV640T	字模式22C9	字节模式C9
EN29LV640B	字模式22CB	字节模式CB
扇区保护验证	保护01H		未保护00H

用户模式定义
字/字节配置
引脚BYTE#上的信号设置控制着设备数据引脚DQ15~DQ0是处于字模式还是字节模式。当引脚
BYTE#设置为逻辑'1'时，设备为字模式配置，DQ15~DQ0激活，并且由CE#和OE#控制。正好
相反，如果引脚BYTE#设置为逻辑'0'，在设备是字配置模式，并且只有数据引脚DQ7~DQ0激
活，并被CE#和OE#控制，引脚DQ8~DQ14为三态，DQ15则用作低字节地址功能输入（A-1）。

待命模式
EN29LV640T/B支持CMOS兼容待命模式，该模式下电流会减至小于1uA，设置过程如下：
	CE#: Vcc+/-0.5
	RESET#: CMOS input level
	BYTE#:	CMOS input level
EN29LV640T/B支持TTL兼容待命模式，该模式可将最大VCC电流减至小于1mA，过程如下：
	CE#: VIH
在待命模式下输出处于高阻态，并且与OE#输入无关。

自动睡眠模式
EN29LV640T/B有自动睡眠模式，可以降低功耗。当地址总线的状态保持tacc+30ns以上时，
就会自动进入此模式。直流特性表中Icc4表示了电流特性，当出现标准访问时序时，设备
会在地址改变是输出新数据。

读模式
当设备上电或硬件复位后自动进入读数组数据模式。不需要接收任何命令来接收数据。设
备也会在执行完一个嵌入程序或嵌入擦除算法后进入读数组数据模式。
当设备接受了一个扇区擦除推迟命令时，设备进入扇区擦除推迟模式。除了假如它读取擦
除休眠扇区内的某地址设备输出状态数据外，系统可以通过标准读时序来读取数组数据，
在扇区擦除推迟模式内执行完一个编程操作后，设备可以再次以同样例外的方式读取数组
数据。
如果DQ5变为高电平或者正处于自动选择模式，系统必须发送复位命令来重新使能设备到
数组读取模式。

输出禁止模式
当引脚OE#位于逻辑高电平时（VIH），EN29LV640T/B输出被禁止。输出引脚被置于高阻态。

自动选择识别模式
自动选择模式通过DQ15~DQ0上输出的识别码提供了生产商和设备标识以及扇区保护验证信
息。这个模式主要是为了编程设备自动匹配设备与对应编程算法。然而，自动选择码也可
以在线通过命令寄存器获取。
当使用编程设备时，自动选择模式需要地址线A9上加电压VID(10.5V到11.5V)。地址线A6，
A1和A0必须像自动选择码表中显式的一样。此外，当验证扇区保护信息时，扇区地址必须
出现在合适的最高地址位上。参照对应的扇区地址表。命令定义表显示了不关心的剩余地
址位，当所有必需位按照要求设置以后，编程设备就可以从DQ15~DQ0上读出对应的标识码。
为了在线访问自动选择码，主机系统可以根据命令定义表通过命令寄存器发送自动选择命
令。本方式不需要VID，参见命令定义表。

写命令序列
为了写一个命令或者命令序列以便对设备进行编程或者擦除数据，系统必须驱动WE#和CE#
为VIL，并且OE#设为VIH。
对于编程操作，引脚BYTE#控制设备接受的编程数据是字节格式还是字格式。一次擦除操作
可以擦除一个擦除扇区或者整个芯片。
系统也可以通过进入自动选择模式读取自动选择码，这需要写入自动选择序列。参照命令
定义表获取所有可用命令。

硬件复位
当引脚RESET#设为低电平tRP时间后，所有的输出引脚变为三态。所有的写入到内部状态
机的命令被复位到读数组数据模式。
参照AC特性中RESET#引脚的时序图。

扇区/扇区组保护和芯片去保护
硬件扇区组保护功能在任意扇区上禁止编程和擦除操作。硬件芯片去保护功能重新使能前
面被保护扇区的编程和擦除操作。一个扇区组指的是三或四个可同时被保护的相邻扇区。
请参见后续介绍扇区组组织的表格。
有两种方法来使能这种硬件保护电路。第一种仅仅需要引脚RESET#设置为VID，然后标准
微处理器时序可以用来使能和禁止这一功能。参见图表7a和图表7b的算法以及图12显示的
时序。
在进行芯片去保护时，所有未被保护的扇区组必须在任意去保护写周期前加保护。
第二种方法是为编程设备设计的。这种方法要求给引脚OE#和A9#加VID信号，并且使用非
标准微处理器时序。这种方式在另外一个叫做EN29LV640T/B Supplement的文档中描述。
请联系Eon的代表获取。

扇区组组织表格，每4个64KB扇区为一组，最后3个64KB扇区为一组，8KB扇区不分组。

写保护和编程加速（WP#/ACC）
引脚WP#/ACC提供了两种功能。写保护功能为保护最外面两个8KB的引导扇区提供了硬件支
持。ACC功能允许工厂生产时使用外部高电压加快烧写速度。
当WP#/ACC为低电平时，设备保护最外面的两个8KB引导扇区。不管这两个扇区的扇区组保
护功能状态。在这两个扇区上的编程和擦除操作被忽略。
当WP#/ACC为高电平时，设备将最外面两个引导扇区的保护状态返回到原先的状态。除非
这两个扇区被扇区保护功能保护，否则允许编程和擦除。
当WP#/ACC的电平增加到VHH时，存储器自动进入到锁定旁路模式，临时去除所有保护扇区
上的保护，如此减少了编程操作所需的时间。锁定旁路模式下，系统需要使用一个2周期
的编程命令序列。当WP#/ACC返回到VIH或VIL时，恢复正长的操作。从VIH或者VIL到VHH以
及从VHH到VIH或VIL的转换必须比tBVHHB慢，参见图11。
注意：WP#/ACC引脚不可悬空，此外，WP#/ACC引脚除了加速编程模式外不可以连接到VHH，
否则会烧毁设备。
除了读模式外，不可以从其它模式把此引脚上的信号升高到VHH，否则存储器会进入一个不
确定状态。
在WP#/ACC引脚和VSS之间需要连接一个0.1uF的电容来为来自电源端的电涌去耦。PCB线宽
必须足够宽以保证通过旁路加锁编程所需的电流。

临时扇区去保护
这个功能允许临时去除先前设置保护的扇区组上的保护以便在线修改数据。临时扇区去保
护模式是通过设置RESET#引脚到VBIDB来激活的。在这个模式下，前面设置保护的扇区可
以简单的通过选中扇区地址来编程和擦除。一旦RESET#引脚上的VBIDB撤除，所有的扇区组
保护被恢复。参见协同工作流程和图10来获取详细时序。

通用闪存接口（CFI）
通用闪存接口规范描述了一个设备和主机软件间问询握手方式，允许对整个设备族使用特
定软件算法。这允许实现设备无关，JEDEC ID无关并且向前后都兼容的支持特定闪存设备
族的软件。它允许生产厂商为了长期兼容性而标准化它们已经存在的接口。
任何设备准备好读取数组数据的时候，系统都可以通过向字地址55h（或字节地址AAH）写
入CFI查询命令98H来让设备进入CFI查询模式。
系统可以从表5-8给定的地址中读出CFI信息，高地址位（A7-MSB）必须全部置零。为了终
止读取CFI数据，系统必须写入复位命令。
系统也可以在设备处于自动选择模式时写CFI查询命令。这样设备进入CFI查询模式，系统
可以由表5-8给定的地址读出CFI数据。系统必须通过写入复位命令来使设备返回到自动选
择模式。

表5：CFI查询标记字符串
表6：系统接口字符串
表7：设备拓扑定义
表8：主厂商定义扩展查询表（CFI命令集）

硬件数据保护
编程或擦除解锁周期的命令序列要求提供了对写操作疏忽的数据保护，如命令表所示。此
外，后面的硬件数据保护措施防止意外的擦除或编程操作，这样的操作可能是由上电和断
电时错误的系统电平信号转换或者系统噪声引起的。

低Vcc写禁止
当Vcc低于VLKO时，设备不接受任何写命令。在VCC上电和断电过程中，这可以保护数据。
命令寄存器和所有的内部编程/擦除电路都被禁止，设备复位。接下来的写操作都被忽略
直到VCC大于VLKO。系统必须提供合适的信号给控制引脚来防止VCC大于VLKO时的无意的写
操作。

写脉冲Glitch保护
OE#, CE#或者WE#上短于5ns的噪音脉冲不会激活一次写周期。

逻辑禁止
在OE#=VIL，CE#=VIH，或者WE#=VIH任意条件满足时，写周期都被禁止。为了激活一次写
周期，CE#和WE#必须是逻辑0，OE#必须是逻辑1。如果CE#，WE#和OE#都是逻辑0（不推荐
的用法），会被认为是一次读操作。

上电写禁止
在上电过程中，设备自动复位到读模式并且锁定写周期。即使CE#=VIL，WE#=VIL且OE#=VIH
设备也不会在WE#的上升沿接受命令。

命令定义
设备的操作是通过向命令寄存器中写入一个或多个命令来选择的。命令由通过命令寄存器
向特定地址写如的数据序列组成。特定操作的序列定义在命令定义表中。不正确的地址，
不正确的数据或者不正确的顺去都会让设备复位到读模式。

表9：EN29LV640T/B命令定义表
命令序列有：读；复位；自动选择（制造商ID；设备ID；扇区保护验证）；编程；旁路保
护；锁定旁路编程；锁定旁路复位；整片擦除；扇区擦除；扇区擦除推迟；扇区擦除恢复；
CFI查询。
注意：表里所有的总线周期都指的是写周期。
RA表示读地址，将要读的地址，这是一个读周期
RD表示读数据，读操作时从位置RA读数据，这是一个读周期
PA表示编程地址，将要被编程的存储器地址，X表示不关心
PD表示编程数据，将要被烧写到位置PA的数据
SA表示扇区地址，要被擦除或者验证的扇区地址。地址位A20-A12唯一选定任意一个扇区。

读数组数据
设备在上电后被自动设置到读数组数据模式。不需要命令来取回数据。设备也会在完成一
个嵌入编程或者嵌入擦除算法后回到读数组数据模式。
在一个扇区擦除推迟命令之后，进入扇区擦除推迟模式。系统可以使用标准读时序来从任
意一个当前不处于擦除推迟模式的扇区中读数据。如果系统从一个处于擦除推迟模式扇区
内的地址读数据，设备会输出状态数据。在扇区擦除推迟模式中完成编程操作后，系统可
以再次以同样例外读数组数据。
当DQ5在活跃编程或者擦除操作或者自动选择模式期间变高电平，则必须发送复位命令以
便重新使设备进入读取数组数据模式。

复位命令
向设备写入复位命令，设备会进入读数组数据模式。这个命令不关心地址位。
复位命令可能在擦除命令发出但还没有还是擦除时被写入。这会让设备进入到读数组数据
模式。一旦擦除开始，则设备会忽略复位命令直到操作结束。复位命令可能在编程命令发
出但还没有开始编程前写入，这时复位命令让设备进入读数组数据模式，同时进入到扇区
擦除推迟编程模式。一旦编程开始，设备会在操作完成前一直会略复位命令。
复位命令可能在自动选择命令序列之间写入。一旦在自动选择模式，必须写入复位命令来
返回到读数组数据模式。
如果在编程或擦除操作时DQ5变成高电平，写复位命令让设备返回到读数组数据模式，同时
进入扇区擦除推迟模式。

自动选择命令序列
自动选择命令序列允许主机系统访问制造商ID或者设备ID，并且决定某个扇区是否被保护。
命令定义表给出了需要的数据和地址信息。另一中为商业编程器提供的备选方法是让地址
位A9设置为VID。
在自动选择命令之后两个解锁周期发起自动选择命令序列。之后进入自动选择模式，系统
可以从表9显示的地址处读取信息任意多次，而不需要再次发送命令序列。
系统必须写入复位命令来退出自动选择模式，返回到读数组数据模式。

字/字节编程命令
设备可以按字节或者按字烧写，这取决于引脚BYTE#的状态。EN29LV640T/B通过使用一个
四总线周期的操作编程（两个解锁写周期后跟编程设置命令和编程数据写周期）。当编程
命令被执行后，不需要额外的CPU操作或者时序。一个内置的定时器自动结束编程操作。
地址在CE#或者WE#（选后面的一个）的下降沿锁存，数据在CE#或者WE#（选前面一个）的
上升沿锁存。
在编程操作中发给设备的任何命令均被忽略。编程状态可以通过采样DQ7（DATA#轮询）或
者DQ6（触发位）来检查。当编程操作成功结束，设备返回到读模式，用户可以从被烧写
地址读出烧写的数据。注意数据不可以从0变成1，这样做得尝试可能会停止操作并且将
DQ5设置为1，或者导致DATA#轮询算法指出操作在把0转化为1。当编程时间限制被超出，
DQ5会产生一个逻辑1和一个复位命令使设备返回到读模式。
编程操作允许以任意顺序跨过扇区边界。

解锁旁路命令
为了加速编程操作，可使用锁定旁路命令，一旦这个功能被激活，则可以用使用2周期的
锁定旁路编程命令代替4周期的正常编程命令来烧写设备。在锁定旁路模式，只接受锁定
旁路编程和锁定旁路复位命令。在发送锁定旁路复位命令后，退出这个模式。设备上电时
这个功能被禁止。设备通过WP#/ACC引脚来提供加速编程操作。当WP#/ACC设置为VHH时，
设备自动进入锁定旁路模式。系统可以发送两周期锁定旁路编程命令序列。

整片擦除命令
整片擦除是一个6总线周期操作。整片擦除命令通过写入两个解锁周期和一个设置命令发
起。在芯片擦除命令之后是两个额外的解锁写周期，它们轮流唤醒内置擦除算法。设备不
需要系统在擦除前预编程。内置擦除算法在电擦除之前自动预编程并且校验整个存储器所
有单元为0数据。系统不需要为这些操作提供任何控制和时序。命令定义表显示了整片擦除
所需要的地址和命令序列。
在内置芯片擦除算法工作期间任何写入的命令都被忽略。
系统可以通过DQ7，DQ6或者DQ2来确定擦除操作的状态。当内置擦除算法结束，设备返回到
读数组数据模式，并且地址线不再被锁闭。

扇区擦除命令
扇区擦除命令是一个6总线周期的操作。扇区擦除命令序列通过写入两个解锁周期，后面跟
一个设置周期发起。然后两个额外的解锁写周期后跟要擦除的扇区地址以及扇区擦除命令。
命令定义表显示了扇区擦除命令序列需要的地址和数据。
一旦扇区擦除操作开始，只有扇区擦除推迟命令有效。所有其他命令均被忽略。如果有多
个扇区将被擦除，扇区擦除命令序列必须为每个扇区发送。也就是，每条扇区擦除命令只
能指定一个扇区地址。用户必须在上一条扇区擦除命令结束后发送另一条扇区擦除命令来
擦除另一个扇区。
当内置扇区擦除算法完成后，设备返回到读数组数据模式，并且地址线不再被锁闭。系统
可以通过DQ7，DQ6或者DQ2来确定擦除操作的状态。流程图4描述了擦除操作算法。参见AC
特性中的擦除/编程操作表获取参数值，参见扇区擦除操作时序图获取时序波形。

扇区擦除推迟/恢复命令
扇区擦除推迟命令允许系统中断一个扇区擦除操作，然后从任何没有被选中擦除的扇区中
读或者写入数据。这个命令只在扇区擦除操作期间可用。在整片擦除或内置编程算法期间
扇区擦除推迟命令被忽略。在写入扇区擦除推迟命令时不关心地址。
在扇区擦除操作期间写入扇区擦除推迟命令，设备会请求至多20us来推迟擦除操作。
在擦除操作被推迟后，系统可以从任何未被选中擦除的扇区读数据或者向其中烧写数据。
正常读和写时序及命令定义仍然适用。请注意：自动选择命令序列在扇区擦除推迟期间不
被接受。
从被推迟擦除的扇区内的地址读会从DQ7~DQ0返回状态信息。系统可以使用DQ7，或者DQ6
和DQ2一起，来确定扇区是正在被擦除还是擦除推迟状态。参见写操作状态来获取这些状
态位的信息。
在一个擦除推迟编程操作完成后，系统可以再次从非擦除推迟的扇区读数组数据。系统可
以使用DQ7或者DQ6状态位来确定编程操作的状态，就像标准编程操作一样。在扇区擦除推
迟模式下不支持自动选择命令。
系统必须写入扇区擦除恢复命令来退出扇区擦除推迟模式以便继续扇区擦除操作。后续的
写恢复命令被忽略。在恢复擦除后可以写入另外的扇区擦除推迟命令。

写操作状态
DQ7: DATA#轮询
EN29LV640T/B在DQ7上提供了DATA#轮询来指出内置操作的状态。DATA#轮询功能在字/字节
编程、扇区擦除、整片擦除和扇区擦除推迟期间有效。
当内置编程操作正在进行时，试图读取设备会在DQ7上返回写入到DQ7上的数据的补码。接
近编程操作完成，试图读设备会在DQ7上返回写入的真实数据。DATA#轮询在四周期编程序
列的四个WE#或者CE#的上升沿之后有效。
当内置擦除正在进行时，试图读取设备会在DQ7上输出0，接近擦除完成时，在读周期会在
DQ7上输出1。对于整片擦除或者扇区擦除，DATA#轮询在6周期序列的最后一个WE#或CE#脉
冲的上升沿之后有效。
DATA#必须作用于正被编程或擦除扇区内的地址，并且不能是被保护的扇区。否则，如果
应用于一个被保护的扇区DATA#轮询会给出不正确的结果。
在内置操作将要完成之前，DQ7会在输出使能为低的时候异步的改变。这意味着设备设备
让状态信息在DQ7上发生突变，数据是即时有效的。根据系统采样DQ7输出的时间，读取到
的是有效数据。即使设备已经完成了内置操作并且DQ7仍然是有效数据，DQ0~DQ6的数据输
出仍然是无效的。DQ0~DQ7上的数据应该在接下来的读尝试时有效。
流程图5显示了DATA#（DQ7）轮询的过程。DATA#（DQ7）轮询的时序图显示在图6中。

RY/BY#：就绪/忙状态输出
RY/BY#是一个专用的，漏极开路输出引脚，用来指明一个内置算法正在进行还是已经结束。
RY/BY#状态在命令序列的最后一个WE#脉冲的上升沿后有效。由于RY/BY#是漏极开路输出，
所以多个RY/BY#引脚可以一起并行通过一个上拉电阻连接到VCC。
在输出低期间，表示忙，设备正在擦写或者烧写。这包括在擦除推迟模式下的烧写。如果
输出高，表示就绪，设备准备好读取数组数据（包括擦除推迟模式期间）或者处于待命模
式。

DQ6：切换位I（读一次，切换一次）
EN29LV640T/B在DQ6上提供了一个切换位用来指出内置编程和擦除操作的状态。
在内置编程和擦除操作期间，后续从设备任意地址读数据（通过OE#或CE#）的企图会导致
DQ6在0和1之间切换。一旦内置编程或擦除操作完成，DQ6就停止切换并且有效数据会在接
下来的尝试时被读到。在烧写过程中，切换位在四周期序列的第四个WE#脉冲的上升沿之后
有效。在擦除操作期间，切换位在扇区擦除或整片擦除的6周期命令序列的第6个WE#脉冲的
上升沿后有效。
在内置烧写时，如果被写入的扇区被保护了，DQ6会被切换2us的时间，然后停止切换，扇
区的数据未被更新。在扇区擦除或者整片擦除时，如果所有选中的扇区都被保护，DQ6会切
换大概100us，然后芯片返回到读模式，所有被保护的扇区数据未更新。
流程图6显示了切换位DQ6的流程，图7显示了它的时序。

DQ5：超时限制
DQ5指出编程或者擦除操作是否超出一个内置脉冲计数器的指定限制。如果超出了，则DQ5
产生1。这是表示编程或者擦除失败的指示。由于DQ5可以在设备成功完成操作后并且返回
到读模式以后变为1，所以用户必须在DQ5上检测到1后再次检查DQ6是否在切换。
DQ5可能在系统尝试向一个原先编程为0的位置改写入1时（不经擦除）发生。只有擦除操作
可以将0变回到1。在这种情况下，设备停止操作，当操作超时以后，DQ5产生1，在这类情
况下，系统必须发送复位命令来使设备返回到读数组数据模式。

DQ3：扇区擦除计时器
当写入一个扇区擦除命令序列之后，可通过检测DQ3的输出来确定一个擦除操作是否已经开
始。（扇区擦除计数器对整片擦除命令无效）。当扇区擦除开始，DQ3从0切换到1。本设备
不支持多扇区擦除（连续扇区擦除）命令，所以这个不是很有意义，因为它会在第一个30H
命令后马上显示1进入擦除操作。将来的设备可能会支持这个功能。

DQ2：擦除切换位II
DQ2上的切换位，和DQ6一起使用时，用来指出一个特定的扇区是正在擦除还是擦除推迟。
切换位II在命令序列的最后一个WE#脉冲的上升沿之后有效。DQ2当系统从这些选中擦除的
扇区内的地址读取时会切换（系统使用OE#或者CE#来控制读周期）。但是DQ2不能区分一个
扇区是正在擦除还是处于擦除推迟模式。相反，DQ6指明了设备是处于正擦除还是擦除推迟
模式，但不能区分那个扇区被选中擦除。因此在确定扇区和模式信息时这两个状态位都需
要。参见后面的表格比较DQ2和DQ6的输出。
流程图6显示了切换位算法，并且小节DQ2：切换位解释了算法。参见DQ6：切换位I小节。
参见切换位时序图。DQ2 vs DQ6图以图表的方式显示了DQ2和DQ6的不同。

读触发位DQ6/DQ2o
参考流程图6来进行后面的讨论。无论何时系统发起开始读切换位状态，它必须至少连续读
DQ7~DQ0两次来确定是否一个切换位在切换。典型的，系统会标记和存储第一次读的切换位
的值。在第二次读之后，系统会比较新旧值。如果切换位没有切换，表示设备已经完成了
编程或者擦除操作。则系统可以在下个读周期中从DQ7~DQ0读取数组数据。
然而，在发出两个读周期之后，系统发现切换位仍然在切换。并且系统也应该注意DQ5的
值是否为高电平。如果是，那么系统应该判断切换位是否仍在切换，因为在DQ5变高以后
切换位会停止切换。如果切换位不再切换，则设备成功完成编程或擦除操作，如果仍然在
切换，则设备没有成功完成操作，系统必须写入复位命令发挥读数组数据状态。

写操作状态表

状态寄存器位表

内置算法
流程图1：嵌入编程

流程图2：嵌入编程命令序列

流程图3：嵌入擦除

流程图4：嵌入擦除命令序列

流程图5：DATA#轮询算法

流程图6：触发位算法

流程图7a：在线扇区（组）保护流程

流程图7b：在线芯片去保护流程

---------------------------------------
参考文件:
EN29LV640B/T Datasheet form http://www.essi.com.tw

