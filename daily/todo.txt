*******************************************************************************
当前：
    ucboot
        jffs2文件系统
	    +-------------+
	    | boot loader |
	    +-------------+
	    |             | <- u_kernel & u_rootfs & configs，只读
	    |    jffs2    | <- firmware update...，只读
	    |             | <- /boot, can be mounted，只读
	    +-------------+
	    |             |
	    |   unused    |
	    |             |
	    +-------------+
	在主机端制作jffs2的文件目录/boot，存放在闪存上，寻找从闪存启动方法，
	需要识别jffs2文件系统，寻找固件更新方法

    (1) 把u_kernel和u_rootfs制作成jffs2镜像，然后放到板子上启动，可以在uboot中
        增加mtdram功能，开发期不必烧写flash
    (2) 调查现有那些mtd partition驱动，是否标准，怎样把它移植到ucboot中和我们的
    	系统中。（U-boot支持两种，参见其文档）
	(a) 不分区支持mtd驱动
	(b) 如何分区
	(c) 开会讨论方案
    (3) 整理ucboot内的fs，把它们模块化（至少ext2/vfat, jffs2, 最好支持yaffs2,
    	ubifs，并调查cramfs）
    (4) 能否通过udev获得mtd name，通过udev monitor截取udev事件
    (5) 能否支持ubifs，如何实现，它可以支持断电保护功能。
    (6) monitor protect, env embedded, flash protected, env overwrite???
    (7) 添加CUSTOM_STOP_KEY逻辑阿；串口kermit下载功能；命令自动完成
    (8) vsc7501/openocd/linux增加mtd驱动patch

#   flash_base->bd_info
#   (*) ucboot中分析grocx_flash和cfi_flash，尽量使兼容，然后在上面跑mtd device
#   (*) linux中跑mtdram，在上面跑jffs2，用mkfs.jffs2做image
#   (*) 编译内核，非模块方式和模块方式


*******************************************************************************
不急
    (a) 总结ARM中的伪指令，访存指令
    (b) 总结内核启动参数的传递，arm启动参数的tag结构的使用
    (c) 搞一下Kbuild系统的实现
    (d) find, sed, awk, split/csplit, join, grep, sort, tr, fmt, man
    (e) debian package: dpkg, apt-get, apt-cache, apt-config, apt-key, apt-mark
    (f) 编码系统，内码，外码，utf8，gbk，字体等
    (g) xinetd
    (h) 能够拷贝空洞但不用0填充的cp; 多项式加减乘除;平衡符号;中缀变后缀;队列
    (i) 排序：基数排序,卡式排序,桶式排序
    (j) 进程、进程组、会话、守护进程
    (k) 几个cntl函数fcntl, ioctl, shmctl, sysctl, semctl, console_ioctl等




*******************************************************************************
重要
    (a) bash，（BBG）练习，和C
    (b) 词汇
    (c) udisk-hub-reader产品

*******************************************************************************
模块机制
Anatomy of Linux loadable kernel modules
http://www.ibm.com/developerworks/linux/library/l-lkm/index.html

同步机制
Anatomy of Linux synchronization methods
http://www.ibm.com/developerworks/linux/library/l-linux-synchronization.html

进程管理机制
Anatomy of Linux process management
http://www.ibm.com/developerworks/linux/library/l-linux-process-management/index.html

slab分配器机制
Anatomy of the Linux slab allocator
http://www.ibm.com/developerworks/linux/library/l-linux-slab-allocator/index.html

动态链接库机制
Anatomy of Linux dynamic libraries
http://www.ibm.com/developerworks/linux/library/l-dynamic-libraries/index.html

*******************************************************************************
关于文件系统
Anatomy of Linux file systems
http://www.ibm.com/developerworks/linux/library/l-linux-filesystem/index.html

Anatomy of the Linux virtual file system switch
http://www.ibm.com/developerworks/linux/library/l-virtual-filesystem-switch/index.html

Anatomy of Linux journaling file systems
http://www.ibm.com/developerworks/linux/library/l-journaling-filesystems/index.html

Anatomy of ext4
http://www.ibm.com/developerworks/linux/library/l-anatomy-ext4/index.html

Anatomyof Linux flash file systems（阅）
http://www.ibm.com/developerworks/linux/library/l-flash-filesystems/index.html

*******************************************************************************
关于虚拟化
Anatomy of the libvirt virtualization library
http://www.ibm.com/developerworks/linux/library/l-libvirt/index.html

Anatomy of a Linux hypervisor
http://www.ibm.com/developerworks/linux/library/l-hypervisor/index.html

*******************************************************************************
实时Linux架构
Anatomy of real-time Linux architectures
http://www.ibm.com/developerworks/linux/library/l-real-time-linux/index.html

SELinux机制
Anatomy of Security-Enhanced Linux (SELinux)
http://www.ibm.com/developerworks/linux/library/l-selinux/index.html

*******************************************************************************
SCSI子系统
Anatomy of the Linux SCSI subsystem
http://www.ibm.com/developerworks/linux/library/l-scsi-subsystem/index.html

网络子系统
Anatomy of the Linux networking stack
http://www.ibm.com/developerworks/linux/library/l-linux-networking-stack/index.html
*******************************************************************************
