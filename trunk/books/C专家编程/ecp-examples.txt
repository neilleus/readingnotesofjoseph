1. 说明数组和指针区别

  file1:
	int mango[100];

  file2:
	extern int *mango;
	...
	/* some code that reference mango[i] */

这里文件1定义了'mango'是一个数组，但是文件2中声明它是一个指针。
文件2中将mango声明为指针，所以在文件2中获取mango[i]的值时，将是首先获取mango位
置内保存的值，以此值作为一个地址来获取该地址处保存的值作为mango[i]的值。而实际
情况应该是将mango的地址值加上下标i构成新的地址值，去该地址处的内容作为mango[i]
的值。

2. 为什么extern char a[]和extern char a[100]等价
两个都声明了一个数组，它们告诉编译器这个数组的位置，编译器不需要知道这个数组有
多大，访问数组元素，它仅仅需要从头部开始按照偏移访问即可。
如果是声明了extern char *p，它告诉编译器这是一个指针，它的内容是一个地址。如果
你要以p[i]的方式访问一个元素，那么它首先是从p地址处获取p的内容，以这个内容作为
起始地址，偏移i，然后获得该处的内容。这个访问方式更加灵活，但是增加了一次取指
操作，增加了访问时间。
