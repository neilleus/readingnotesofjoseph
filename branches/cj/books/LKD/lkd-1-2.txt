Author: Joseph Lee
E-Mail: fdlixiaojun@gmail.com

关于上下文
上下文代表着内核的活动范围，处理器在任何指定时间点上的活动范围可以分为三种：
·运行于内核空间，处于进程上下文，代表某个特定的进程执行
·运行于内核空间，处于中断上下文，与任何进程无关，处理某个特定的中断（包括BH）
·运行于用户空间，执行用户进程
·CPU空闲，内核运行一个空进程，处于进程上下文，但运行于内核空间

关于系统调用和代码运行空间
内核运行于内核空间，普通用户程序运行于用户空间，应用程序通过系统调用和内核通信。
当一个应用程序执行一条系统调用，我们说内核在代其执行，即此时应用程序通过系统调
用在内核空间运行，而内核被称为运行于进程上下文中。这种交互关系，应用程序通过系
统调用陷入内核——是应用程序完成其工作的基本行为方式。

进程可以通过系统调用和异常处理程序陷入内核。

内核还负责管理系统的硬件设备。内核通过中断号查找相应的中断服务程序，并调用这个
程序响应和处理中断。

关于单内核和微内核
单内核就是把内核作为一个单独的大过程来实现，并同时运行在一个单独的地址空间，内
核通常以单个二进制文件存放于磁盘。所有内核服务都在这个大内核空间运行，内核间通
信微不足道，函数可以直接调用。
微内核相反，它的功能被划分为独立的过程，每个过程叫做一个服务器。理想情况下，服
务器运行于用户空间，除非请求特权，所有的服务器保持独立并运行于各自的地址空间，
需要使用IPC机制互相通信。实际中为了减少上下文切换和IPC机制的性能问题，实际的微
内核如Windows NT都把大多数服务器运行于内核空间。

Linux特点
·单内核
·抢占式内核，内核本身可调度，内核中一段正在运行的代码可以被另外一段代码抢占
·支持内核线程，多线程内核
·支持动态加载模块，模块化内核
·不区分线程和进程
·支持对称多处理SMP

git，patch

内核开发相关：
为了类型安全，尽量用inline代替宏
分支预测宏，likely()和unlikely()，常用于错误判断
内核中的内存不分页？？
固定大小的内核栈，与体系结构相关，编译时配置，有两页栈和一页栈。
随时注意同步和并发。

---------------------------------------
References:
Linux Kernel Development Chapter 1 Linux内核简介
Linux Kernel Development Chapter 2 从内核出发
